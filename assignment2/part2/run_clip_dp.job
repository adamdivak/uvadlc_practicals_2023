#!/bin/bash

#SBATCH --partition=gpu
#SBATCH --gres=gpu:1
#SBATCH --job-name=CLIP_DP
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=3
#SBATCH --time=04:00:00
#SBATCH --mem=32000M
#SBATCH --output=logs_dp/clip_dp_output_%A.out
#SBATCH --error=logs_dp/clip_dp_error_%A.out

module purge
module load 2022
module load Anaconda3/2022.05

# activate the environment
source activate dl2023

# Run 1: Visual prompting CLIP on CIFAR-10 with standard text prompt
code_dir=./

# Standard constants
arch="ViT-B/32"
text_prompt_template="This is a photo of a {}"
epochs=40

## Set of experiments on CIFAR-10
dataset="cifar10"
root=/scratch-local/$USER
mkdir -p $root

# deep prompting

datasets=(cifar10 cifar100)
injection_layers=(0 2 4 6 8 10)

default_parameters="--root $root --arch $arch --epochs $epochs --prompt_type deep_prompt --print_freq 100 --print_tqdm_interval 60"

for dataset in "${datasets[@]}"; do
    for injection_layer in "${injection_layers[@]}"; do
        echo "Running experiment on $dataset injecting deep prompt into layer $injection_layer"
        python $code_dir/main.py \
            $default_parameters \
            --text_prompt_template "$text_prompt_template" \
            --dataset $dataset \
            --injection_layer $injection_layer

        echo "Evaluating experiment on $dataset injecting deep prompt into layer $injection_layer with test noise"
        python $code_dir/main.py \
            $default_parameters \
            --text_prompt_template "$text_prompt_template" \
            --dataset $dataset \
            --injection_layer $injection_layer \
            --evaluate \
            --resume_best \
            --test_noise

        echo "Evaluating experiment on both datasets injecting deep prompt into layer $injection_layer"
        python $code_dir/cross_dataset.py \
            $default_parameters \
            --text_prompt_template "$text_prompt_template" \
            --dataset $dataset \
            --injection_layer $injection_layer \
            --evaluate \
            --resume_best
    done
done
