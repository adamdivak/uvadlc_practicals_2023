#!/bin/bash

#SBATCH --partition=gpu
#SBATCH --gres=gpu:1
#SBATCH --job-name=RESNET18-CIFAR100
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=3
#SBATCH --time=04:00:00
#SBATCH --mem=32000M
#SBATCH --output=resnet18_output_%A.out
#SBATCH --error=resnet18_error_%A.out

module purge
module load 2022
module load Anaconda3/2022.05

# activate the environment
source activate dl2023

root=/scratch-local/$USER
mkdir -p $root

code_dir=./

datasets=(cifar10 cifar100)

for dataset in "${datasets[@]}"; do
  # It's not easy to "negate" the augmentation_name and test_noise options with the given cmd arguments,
  # so enumerate the combinations instead of using for loops

  # Train without augmentation
  python $code_dir/train.py --print_tqdm_interval 60 --dataset $dataset

  # ..evaluate with noise
  python $code_dir/train.py --print_tqdm_interval 60 --dataset $dataset --resume_best --evaluate --test_noise

  # Train with augmentation
  python $code_dir/train.py --print_tqdm_interval 60 --dataset $dataset --augmentation_name auto_augment

  # ..evaluate with noise
  python $code_dir/train.py --print_tqdm_interval 60 --dataset $dataset --augmentation_name auto_augment --resume_best --evaluate --test_noise
done
